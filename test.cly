Mem :: #include "Std/Mem";
#include "Window";
// 
// FT_Uint      :: #type uint;
// ClickHandler :: #type bool(ClickEvent)!Std::Error*;
// 
FACTOR ::= 80;
// WIDTH  ::= FACTOR * 16;
// HEIGHT ::= FACTOR * 9;

void Wrapper<T>::main<T>(string[] args) {
    #include "Compiler";

    static byte[1024] minibuf;

    struct Hello<U> {
        byte a;
        byte b;
        short c;
    }


    string msg = "Hello, World";
    print(msg);
    // const window  = Window::open("Window", WIDTH, HEIGHT);
    int WINDOW ::= 4;
}

string from_raw_parts(byte *data, nuint len) {
    return string_from_raw_parts(data, len);
    string string_from_raw_parts(byte *data, nuint len) #compiler_intrinsic;
}

