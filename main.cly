
enum OpenMode {
    Reading;
    Writing;
}

struct Stmt {
    enum StmtKind {
        Expr;
        Block;
    }

    Span span;
    NodeId node_id;

#if StmtKind kind == {
    ::Expr =>
        using Expr *expr,
    ::Block =>
        using Block *block,
}
}

struct Vector2 {
    byte x;
    byte y;
}

void exit(int code) #link;
void println(str message) #link;
tuple<int, int> file_open(str path, OpenMode mode) #link;

nuint len(string[] slice) {
    var (data, len) = to_raw_parts(slice);
    return slice.0;
}

int main(string[] argv) {
    nuint idx = 0;
    file_open("", ::Reading);
    for arg in argv {
        println(arg);
    }
    return 0;
}

