
enum OpenMode {
    Reading,
    Writing
}

/*union Stmt {
#switch enum #infer kind {
    #case ::Expr => using Expr expr,
    #case ::Block => using Block block,
}
    Span span;
    NodeId node_id;
}*/

struct Vector2 {
    byte x;
    byte y;
}

void exit(int code);
void println(str message);
(int, int) file_open(str path, OpenMode mode);

nuint len(str slice[]) {
    var slice = transmute((nuint, void*))slice;
    return slice.0;
}

int main(str argv[]) {
    nuint idx = 0;
    file_open("", ::Reading);
    for arg in argv {
        println(arg);
    }
    return 0;
}

